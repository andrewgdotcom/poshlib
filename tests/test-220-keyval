#!/bin/bash

SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")
# shellcheck disable=SC1090,SC1091
. "${SCRIPT_DIR}/../poshlib.sh" || exit 1
use swine
use keyval

tmpfile=$(mktemp)

VERBOSE=""
if [[ "${1:-}" == "--verbose" ]]; then
    VERBOSE=true
fi

# Simple read

cat <<EOF > "$tmpfile"
READ1=1
READ2=2
#UPDATE=0
EOF

eval "$(keyval.read "$tmpfile")"
[[ ! $VERBOSE ]] || warn "\"READ1\" == \"1\""
[[ "$READ1" == "1" ]]
[[ ! $VERBOSE ]] || warn "\"READ2\" == \"2\""
[[ "$READ2" == "2" ]]

unset READ1
unset READ2

keyval.import "$tmpfile"
[[ ! $VERBOSE ]] || warn "\"READ1\" == \"1\""
[[ "$READ1" == "1" ]]
[[ ! $VERBOSE ]] || warn "\"READ2\" == \"2\""
[[ "$READ2" == "2" ]]


# Updates

cp "$tmpfile" "$tmpfile.orig"
keyval.update "$tmpfile" UPDATE 0
keyval.delete --comment "$tmpfile" UPDATE
[[ ! $VERBOSE ]] || warn "diff should be nil"
diff "$tmpfile" "$tmpfile.orig"

keyval.add "$tmpfile" UPDATE 1
out="$(keyval.read "$tmpfile" UPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"UPDATE=1\""
[[ "$out" == "UPDATE=1" ]]

keyval.add --no-update "$tmpfile" UPDATE 2
out="$(keyval.read "$tmpfile" UPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"UPDATE=1\""
[[ "$out" == "UPDATE=1" ]]

keyval.add "$tmpfile" UPDATE 3
out="$(keyval.read "$tmpfile" UPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"UPDATE=3\""
[[ "$out" == "UPDATE=3" ]]

keyval.update "$tmpfile" UPDATE 4
out="$(keyval.read "$tmpfile" UPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"UPDATE=4\""
[[ "$out" == "UPDATE=4" ]]

keyval.update --no-add "$tmpfile" NOUPDATE 5
out="$(keyval.read "$tmpfile" NOUPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]

keyval.add --multi "$tmpfile" UPDATE 5
keyval.add --multi "$tmpfile" UPDATE 6
out="$(keyval.read "$tmpfile" UPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"UPDATE=6
UPDATE=5
UPDATE=4\""
[[ "$out" == "UPDATE=6
UPDATE=5
UPDATE=4" ]]

keyval.delete "$tmpfile" UPDATE
out="$(keyval.read "$tmpfile" UPDATE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]


# Handling of special characters
val="a1\$a&.*(\"'{[]}) %b #c=!!\\[\n /"
keyval.add "$tmpfile" SPECIAL "$val"
eval "$(keyval.read "$tmpfile" SPECIAL)"
[[ ! $VERBOSE ]] || warn "\"$SPECIAL\" == \"$val\""
[[ "$SPECIAL" == "$val" ]]

keyval.update "$tmpfile" SPECIAL "$val"
eval "$(keyval.read "$tmpfile" SPECIAL)"
[[ ! $VERBOSE ]] || warn "\"$SPECIAL\" == \"$val\""
[[ "$SPECIAL" == "$val" ]]

keyval.delete "$tmpfile" SPECIAL
out="$(keyval.read "$tmpfile" SPECIAL)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]


# Quote-stripping
val="'val'"
keyval.add "$tmpfile" STRIP "$val"
eval "$(keyval.read "$tmpfile" STRIP)"
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"val\""
[[ "$STRIP" == "val" ]]

eval "$(keyval.read --no-strip "$tmpfile" STRIP)"
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"$val\""
[[ "$STRIP" == "$val" ]]

# again with dquo
val='"val"'
keyval.update "$tmpfile" STRIP "$val"
eval "$(keyval.read "$tmpfile" STRIP)"
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"val\""
[[ "$STRIP" == "val" ]]

eval "$(keyval.read --no-strip "$tmpfile" STRIP)"
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"$val\""
[[ "$STRIP" == "$val" ]]

keyval.delete "$tmpfile" STRIP
out="$(keyval.read "$tmpfile" STRIP)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]


# Array handling
keyval.add "$tmpfile" "ARRAY[1]" 1
out="$(keyval.read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"ARRAY[1]=1\""
[[ "$out" == "ARRAY[1]=1" ]]

keyval.update "$tmpfile" "ARRAY[2]" 2
keyval.delete "$tmpfile" "ARRAY[2]"
out="$(keyval.read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"ARRAY[1]=1\""
[[ "$out" == "ARRAY[1]=1" ]]

keyval.update "$tmpfile" "ARRAY[1]" 2
out="$(keyval.read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"ARRAY[1]=2\""
[[ "$out" == "ARRAY[1]=2" ]]

keyval.delete "$tmpfile" ARRAY
out="$(keyval.read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]
