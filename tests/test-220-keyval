#!/bin/bash

SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")
# shellcheck disable=SC1090
. "${SCRIPT_DIR}/../poshlib.sh" || exit 1
use swine
use keyval

tmpfile=$(mktemp)

VERBOSE=""
if [[ "${1:-}" == "--verbose" ]]; then
    VERBOSE=true
fi

# Simple read

cat <<EOF > "$tmpfile"
READ1=1
READ2=2
EOF

eval $(keyval-read "$tmpfile")
[[ "$READ1" == "1" ]]
[[ "$READ2" == "2" ]]


# Updates

keyval-add "$tmpfile" BAR bar1
out="$(keyval-read "$tmpfile" BAR)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"BAR=bar1\""
[[ "$out" == "BAR=bar1" ]]

keyval-add --no-update "$tmpfile" BAR bar2
out="$(keyval-read "$tmpfile" BAR)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"BAR=bar1\""
[[ "$out" == "BAR=bar1" ]]

keyval-add "$tmpfile" BAR bar3
out="$(keyval-read "$tmpfile" BAR)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"BAR=bar3\""
[[ "$out" == "BAR=bar3" ]]

keyval-update "$tmpfile" BAR bar4
out="$(keyval-read "$tmpfile" BAR)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"BAR=bar4\""
[[ "$out" == "BAR=bar4" ]]

keyval-update --no-add "$tmpfile" WIBBLE wibble
out="$(keyval-read "$tmpfile" WIBBLE)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]

keyval-delete "$tmpfile" BAR
out="$(keyval-read "$tmpfile" BAR)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]


# Handling of special characters
val="bar1\$foo bar=!!\\[\n"
keyval-add "$tmpfile" SPECIAL "$val"
eval $(keyval-read "$tmpfile" SPECIAL)
[[ ! $VERBOSE ]] || warn "\"$SPECIAL\" == \"$val\""
[[ "$SPECIAL" == "$val" ]]

keyval-update "$tmpfile" SPECIAL "$val"
eval $(keyval-read "$tmpfile" SPECIAL)
[[ ! $VERBOSE ]] || warn "\"$SPECIAL\" == \"$val\""
[[ "$SPECIAL" == "$val" ]]

keyval-delete "$tmpfile" SPECIAL
out="$(keyval-read "$tmpfile" SPECIAL)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]


# Quote-stripping
val="'val'"
keyval-add "$tmpfile" STRIP "$val"
eval $(keyval-read "$tmpfile" STRIP)
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"val\""
[[ "$STRIP" == "val" ]]

eval $(keyval-read --no-strip "$tmpfile" STRIP)
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"$val\""
[[ "$STRIP" == "$val" ]]

# again with dquo
val='"val"'
keyval-update "$tmpfile" STRIP "$val"
eval $(keyval-read "$tmpfile" STRIP)
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"val\""
[[ "$STRIP" == "val" ]]

eval $(keyval-read --no-strip "$tmpfile" STRIP)
[[ ! $VERBOSE ]] || warn "\"$STRIP\" == \"$val\""
[[ "$STRIP" == "$val" ]]

keyval-delete "$tmpfile" STRIP
out="$(keyval-read "$tmpfile" STRIP)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]


# Array handling
keyval-add "$tmpfile" "ARRAY[key]" arrayval
out="$(keyval-read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"ARRAY[key]=arrayval\""
[[ "$out" == "ARRAY[key]=arrayval" ]]

keyval-update "$tmpfile" "ARRAY[key3]" arrayval3
keyval-delete "$tmpfile" "ARRAY[key3]"
out="$(keyval-read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"ARRAY[key]=arrayval\""
[[ "$out" == "ARRAY[key]=arrayval" ]]

keyval-update "$tmpfile" "ARRAY[key]" arrayval2
out="$(keyval-read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"ARRAY[key]=arrayval2\""
[[ "$out" == "ARRAY[key]=arrayval2" ]]

keyval-delete "$tmpfile" ARRAY
out="$(keyval-read "$tmpfile" ARRAY)"
[[ ! $VERBOSE ]] || warn "\"$out\" == \"\""
[[ "$out" == "" ]]
